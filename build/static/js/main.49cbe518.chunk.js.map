{"version":3,"sources":["assets/img/logo.png","serviceWorker.js","template/grid.jsx","template/cardCharacter.jsx","character/characterActions.js","utilities/pagination.jsx","character/characterList.jsx","character/character.jsx","template/if.jsx","character/resultSearchCharacter.jsx","main/route.js","character/characterSearchForm.jsx","template/header.jsx","character/characterReducer.js","main/reducers.jsx","index.jsx","main/app.jsx"],"names":["module","exports","Boolean","window","location","hostname","match","Grid","numbers","cols","split","classes","utilitiesClasses","this","props","gridClasses","toCssClasses","className","children","Component","CardCharacter","occupation","join","status","src","img","alt","nickname","name","birthday","mapOccupation","getCharacter","type","payload","axios","get","searchCharacter","stringKey","search","changeSearchCharacter","event","target","value","Pagination","state","pager","items","length","setPage","initialPage","prevProps","prevState","page","pageSize","totalPages","getPager","pageOfItems","slice","startIndex","endIndex","setState","onChangePage","totalItems","currentPage","startPage","endPage","Math","ceil","min","pages","Array","keys","map","i","index","key","onClick","React","defaultProps","CharacterList","bind","character","char_id","renderRows","list","connect","dispatch","bindActionCreators","Character","test","ResultSearchCharacter","searchStringCharacter","href","history","browserHistory","path","component","from","to","CharacterSearchForm","push","placeholder","onChange","disabled","searchAndRedirect","logo","data-toggle","data-target","id","INITIAL_STATE","rootReducer","combineReducers","action","data","devTools","__REDUX_DEVTOOLS_EXTENSION__","store","applyMiddleware","promise","createStore","reducers","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.49cbe518.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.103261d7.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react'\r\n\r\nexport default class Grid extends Component {\r\n    toCssClasses(numbers) {\r\n        const cols = numbers ? numbers.split(' ') : []\r\n        let classes = ''\r\n\r\n        if(cols[0]) classes += `col-${cols[0]}`\r\n        if(cols[1]) classes += ` col-sm-${cols[1]}`\r\n        if(cols[2]) classes += ` col-md-${cols[2]}`\r\n        if(cols[3]) classes += ` col-lg-${cols[3]}`\r\n\r\n        return classes \r\n    }\r\n\r\n    render() {\r\n\r\n        const utilitiesClasses = this.props.utilitiesClasses ? ` ${this.props.utilitiesClasses}` : ''\r\n        const gridClasses = this.toCssClasses(this.props.cols || 12)\r\n        return (\r\n            <div className={gridClasses + utilitiesClasses}>\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nexport default class CardCharacter extends Component {\r\n    mapOccupation() {\r\n        const list = this.props.occupation || []\r\n        return list.join()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"card__character\">\r\n                <div className=\"card__character__overlay\"></div>\r\n                <div className=\"card__character__status\">{this.props.status}</div>\r\n                <img className=\"card__character__image\" src={this.props.img} alt={this.props.nickname} />\r\n                <div className=\"card__character__box\">\r\n                    <h2 className=\"card__character__box__title\">{this.props.name}</h2>\r\n                    <p className=\"card__character__box__birthday\">{this.props.birthday}</p>\r\n                    <p className=\"card__character__box__occupation\">{this.mapOccupation()}</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n","import axios from 'axios'\r\n\r\nconst URL = 'https://www.breakingbadapi.com/api/'\r\n\r\n\r\nexport const getCharacter = () => {\r\n    const request = axios.get(`${URL}characters`)\r\n    return {\r\n        type: 'GET_CHARACTER',\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport const searchCharacter = (stringKey) => {\r\n    const search = stringKey ? `?name=${stringKey}` : ''\r\n    const request = axios.get(`${URL}characters${search}`)\r\n    return {\r\n        type: 'SEARCH_CHARACTER',\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport const changeSearchCharacter = (event) => ({\r\n    type: 'CHANGE_SEARCH_CHARACTER',\r\n    payload: event.target.value\r\n})","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst propTypes = {\r\n    items: PropTypes.array.isRequired,\r\n    onChangePage: PropTypes.func.isRequired,\r\n    initialPage: PropTypes.number,\r\n    pageSize: PropTypes.number\r\n}\r\n\r\nconst defaultProps = {\r\n    initialPage: 1,\r\n    pageSize: 8\r\n}\r\n\r\nclass Pagination extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { pager: {} };\r\n    }\r\n\r\n    componentWillMount() {\r\n        // set page if items array isn't empty\r\n        if (this.props.items && this.props.items.length) {\r\n            this.setPage(this.props.initialPage);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        // reset page if items array has changed\r\n        if (this.props.items !== prevProps.items) {\r\n            this.setPage(this.props.initialPage);\r\n        }\r\n    }\r\n\r\n    setPage(page) {\r\n        var { items, pageSize } = this.props;\r\n        var pager = this.state.pager;\r\n\r\n        if (page < 1 || page > pager.totalPages) {\r\n            return;\r\n        }\r\n\r\n        // get new pager object for specified page\r\n        pager = this.getPager(items.length, page, pageSize);\r\n\r\n        // get new page of items from items array\r\n        var pageOfItems = items.slice(pager.startIndex, pager.endIndex + 1);\r\n\r\n        // update state\r\n        this.setState({ pager: pager });\r\n\r\n        // call change page function in parent component\r\n        this.props.onChangePage(pageOfItems);\r\n    }\r\n\r\n    getPager(totalItems, currentPage, pageSize) {\r\n        // default to first page\r\n        currentPage = currentPage || 1;\r\n\r\n        // default page size is 8\r\n        pageSize = pageSize || 8;\r\n\r\n        // calculate total pages\r\n        var totalPages = Math.ceil(totalItems / pageSize);\r\n\r\n        var startPage, endPage;\r\n        if (totalPages <= 8) {\r\n            // less than 8 total pages so show all\r\n            startPage = 1;\r\n            endPage = totalPages;\r\n        } else {\r\n            // more than 8 total pages so calculate start and end pages\r\n            if (currentPage <= 6) {\r\n                startPage = 1;\r\n                endPage = 8;\r\n            } else if (currentPage + 4 >= totalPages) {\r\n                startPage = totalPages - 9;\r\n                endPage = totalPages;\r\n            } else {\r\n                startPage = currentPage - 5;\r\n                endPage = currentPage + 4;\r\n            }\r\n        }\r\n\r\n        // calculate start and end item indexes\r\n        var startIndex = (currentPage - 1) * pageSize;\r\n        var endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\r\n\r\n        // create an array of pages to ng-repeat in the pager control\r\n        var pages = [...Array((endPage + 1) - startPage).keys()].map(i => startPage + i);\r\n\r\n        // return object with all pager properties required by the view\r\n        return {\r\n            totalItems: totalItems,\r\n            currentPage: currentPage,\r\n            pageSize: pageSize,\r\n            totalPages: totalPages,\r\n            startPage: startPage,\r\n            endPage: endPage,\r\n            startIndex: startIndex,\r\n            endIndex: endIndex,\r\n            pages: pages\r\n        };\r\n    }\r\n\r\n    render() {\r\n        var pager = this.state.pager;\r\n\r\n        if (!pager.pages || pager.pages.length <= 1) {\r\n            // don't display pager if there is only 1 page\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <ul className=\"pagination\">\r\n                {pager.pages.map((page, index) =>\r\n                    <li key={index} className={pager.currentPage === page ? 'active' : ''}>\r\n                        <a onClick={() => this.setPage(page)}>{page}</a>\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nPagination.propTypes = propTypes;\r\nPagination.defaultProps = defaultProps;\r\nexport default Pagination;","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport Grid from '../template/grid'\r\nimport CardCharacter from '../template/cardCharacter'\r\nimport { getCharacter } from './characterActions'\r\nimport Pagination from '../utilities/pagination';\r\n\r\nclass CharacterList extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            pageOfItems: []\r\n        };\r\n\r\n        this.onChangePage = this.onChangePage.bind(this);\r\n    }\r\n\r\n    onChangePage(pageOfItems) {\r\n        // update state with new page of items\r\n        this.setState({ pageOfItems: pageOfItems });\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.props.getCharacter()\r\n    }\r\n\r\n    renderRows() {\r\n        const list = this.state.pageOfItems || []\r\n        return list.map(character => (\r\n            <Grid key={character.char_id} cols=\"12 6 6 3\" utilitiesClasses=\"px-2\">\r\n                <CardCharacter occupation={character.occupation} birthday={character.birthday} status={character.status} img={character.img} name={character.name} />\r\n            </Grid>\r\n        ))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='row'>\r\n                <Grid cols=\"12\">\r\n                    <h1 className=\"title\">Personagens</h1>\r\n                </Grid>\r\n\r\n                {this.renderRows()}\r\n\r\n                <Grid cols=\"12\" utilitiesClasses=\"d-flex justify-content-center\">\r\n                    <Pagination items={this.props.list} onChangePage={this.onChangePage} />\r\n                </Grid>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({ list: state.character.list })\r\nconst mapDispatchToProps = dispatch => bindActionCreators({ getCharacter }, dispatch)\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CharacterList)\r\n\r\n","import React, { Component } from 'react'\r\nimport CharacterList from './characterList'\r\n\r\nexport default class Character extends Component {\r\n    render() {\r\n        return (\r\n            <CharacterList/>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nexport default props => {\r\n    if(props.test) {\r\n        return props.children\r\n    } else {\r\n        return false\r\n    }\r\n}\r\n    \r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport Grid from '../template/grid'\r\nimport CardCharacter from '../template/cardCharacter'\r\nimport If from '../template/if'\r\nimport Pagination from '../utilities/pagination';\r\n\r\nclass ResultSearchCharacter extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            pageOfItems: []\r\n        };\r\n\r\n        this.onChangePage = this.onChangePage.bind(this);\r\n    }\r\n\r\n    onChangePage(pageOfItems) {\r\n        // update state with new page of items\r\n        this.setState({ pageOfItems: pageOfItems });\r\n    }\r\n\r\n    renderRows() {\r\n        const list = this.state.pageOfItems || []\r\n        return list.map(character => (\r\n            <Grid key={character.char_id} cols=\"12 6 6 3\" utilitiesClasses=\"px-2\">\r\n                <CardCharacter occupation={character.occupation} birthday={character.birthday} status={character.status} img={character.img} name={character.name} />\r\n            </Grid>\r\n        ))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='row'>\r\n                <Grid cols=\"12\" utilitiesClasses=\"pb-5\">\r\n                    <If test={this.props.list.length > 0}>\r\n                        <h1>Voce buscou por \"{this.props.searchStringCharacter}\"</h1>\r\n                    </If>\r\n                </Grid>\r\n                <Grid cols=\"12\" utilitiesClasses=\"text-center\">\r\n                    <If test={this.props.list.length === 0}>\r\n                        <p className=\"d-block\">Ops!:(, Não encontramos resultados para a sua busca!</p>\r\n                        <a className=\"btn btn-outline-light\" href=\"/character\">Voltar</a>\r\n                    </If>\r\n                </Grid>\r\n                \r\n                {this.renderRows()}\r\n\r\n                <Pagination items={this.props.list} onChangePage={this.onChangePage} />\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({ searchStringCharacter: state.character.searchStringCharacter, list: state.character.list })\r\n\r\nexport default connect(mapStateToProps)(ResultSearchCharacter)\r\n\r\n","import React from 'react'\r\nimport { Router, Route, Redirect, browserHistory } from 'react-router'\r\n\r\nimport Character from '../character/character'\r\nimport ResultSearchCharacter from '../character/resultSearchCharacter'\r\n\r\nexport default props => (\r\n    <Router history={browserHistory}>\r\n        <Route path='/character' component={Character} />\r\n        <Route path='/resultSearchCharacter' component={ResultSearchCharacter} />\r\n        <Redirect from='*' to='/character' />\r\n    </Router>\r\n)","import React, { Component } from 'react'\r\nimport { browserHistory } from 'react-router'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { changeSearchCharacter, searchCharacter } from './characterActions'\r\n\r\nclass CharacterSearchForm extends Component {\r\n    searchAndRedirect() {\r\n        this.props.searchCharacter(this.props.searchStringCharacter)\r\n        browserHistory.push('/resultSearchCharacter')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"form-inline search__form my-2 my-lg-0\">\r\n                <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Pesquise os personagens\" onChange={this.props.changeSearchCharacter} value={this.props.searchStringCharacter} />\r\n                <button className=\"btn btn-outline-success my-2 my-sm-0\" disabled={!this.props.searchStringCharacter} onClick={() => this.searchAndRedirect()}>Search</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({ searchStringCharacter: state.character.searchStringCharacter })\r\nconst mapDispatchToProps = dispatch => bindActionCreators({ changeSearchCharacter, searchCharacter }, dispatch)\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CharacterSearchForm)\r\n","import React from 'react'\r\nimport CharacterSearchForm from '../character/characterSearchForm'\r\n\r\nimport logo from '../assets/img/logo.png';\r\n\r\nexport default props => (\r\n    <header>\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark p-0 mb-5\">\r\n            <a className=\"navbar-brand\" href=\"/character\">\r\n                <img className=\"logo\" src={logo} alt=\"\"/>\r\n            </a>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                    <li className=\"nav-item active\">\r\n                        <a className=\"nav-link\" href=\"/character\">Personagens</a>\r\n                    </li>\r\n                </ul>\r\n                <CharacterSearchForm/>\r\n                \r\n            </div>\r\n        </nav>\r\n    </header>\r\n)\r\n","const INITIAL_STATE = {\r\n    searchStringCharacter: '',\r\n    list: []\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case 'GET_CHARACTER':\r\n            return {...state, list: action.payload.data}\r\n        case 'SEARCH_CHARACTER':\r\n            return {...state, list: action.payload.data}\r\n        case 'CHANGE_SEARCH_CHARACTER':\r\n            return {...state, searchStringCharacter: action.payload}\r\n        default : \r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux'\r\nimport characterReducer from '../character/characterReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    character: characterReducer\r\n})\r\n\r\nexport default rootReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport { applyMiddleware, createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport promise from 'redux-promise'\n\nimport App from './main/app';\nimport reducers from './main/reducers'\n\nconst devTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\nconst store = applyMiddleware(promise)(createStore)(reducers, devTools)\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n,document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import 'bootstrap/dist/css/bootstrap.min.css'\r\nimport 'jquery/dist/jquery.min.js'\r\nimport 'bootstrap/dist/js/bootstrap.min.js'\r\n\r\nimport '../App.scss'\r\n\r\nimport React from 'react'\r\nimport Routes from './route'\r\n\r\nimport Header from '../template/header'\r\n\r\nexport default props => (\r\n    <div className=\"main__content\">\r\n        <div className=\"container\"> \r\n            <Header />\r\n            <Routes />\r\n        </div>\r\n    </div>\r\n)"],"sourceRoot":""}